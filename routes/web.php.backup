<?php

use App\Http\Controllers\ActivityLogController;
use App\Http\Controllers\ClientController;
use App\Http\Controllers\DashboardController;
use App\Http\Controllers\LeadController;
use App\Http\Controllers\NotificationController;
use App\Http\Controllers\ProjectController;
use App\Http\Controllers\TaskController;
use App\Http\Controllers\UserController;
use Illuminate\Support\Facades\Route;
use Inertia\Inertia;
            'This is a test notification to verify the dynamic notification system is working!',
            \App\Enums\NotificationType::INFO,
            ['test' => true, 'timestamp' => now()->toISOString()]
        );
        
        return redirect()->route('dashboard')->with('success', 'Test notification created!');
    })->name('test.notifications');
    
    // Test welcome notification route
    Route::get('test-welcome', function () {
        $user = auth()->user();
        
        // Send welcome notification
        \App\Services\NotificationService::userWelcome($user);
        
        return redirect()->route('dashboard')->with('success', 'Welcome notification sent!');
    })->name('test.welcome');
    
    // Reset first login for testing
    Route::get('reset-first-login', function () {
        $user = auth()->user();
        $user->update([
            'first_login_at' => null,
            'last_login_at' => null,
        ]);
        
        return redirect()->route('dashboard')->with('success', 'First login reset! Next page load will trigger first login welcome.');
    })->name('reset.first.login');\ClientController;
use App\Http\Controllers\DashboardController;
use App\Http\Controllers\LeadController;
use App\Http\Controllers\NotificationController;
use App\Http\Controllers\ProjectController;
use App\Http\Controllers\TaskController;
use App\Http\Controllers\UserController;
use Illuminate\Support\Facades\Route;
use Inertia\Inertia;

Route::get('/', function () {
    return Inertia::render('welcome');
})->name('home');

Route::middleware(['auth', 'verified'])->group(function () {
    Route::get('dashboard', [DashboardController::class, 'index'])->name('dashboard');

    // Users Page:
    Route::get('/users', [UserController::class, 'index'])->name('users.index'); // Index page for Users.
    Route::get('/users/create', [UserController::class, 'create'])->name('users.create');
    Route::post('/users/store', [UserController::class, 'store'])->name('users.store'); // Store new User.
    Route::get('/users/{user}/edit', [UserController::class, 'edit'])->name('users.edit'); // Editing certain user.
    Route::put('/users/{user}/update', [UserController::class, 'update'])->name('users.update'); // Updating certain user.
    Route::delete('/users/{user}/destroy', [UserController::class, 'destroy'])->name('users.destroy'); //deleting or removing user.

    // Client Page:
    Route::get('clients', [ClientController::class, 'index'])->name('clients.index'); // index ClientPage
    Route::get('clients/create', [ClientController::class, 'create'])->name('clients.create'); // Page in creating new clients.
    Route::post('/clients/store', [ClientController::class, 'store'])->name('clients.store'); // Store new Client.
    Route::get('clients/{client}/edit', [ClientController::class, 'edit'])->name('clients.edit'); // Editing certain client.
    Route::put('clients/{client}/update', [ClientController::class, 'update'])->name('clients.update'); // Updating certian client.
    Route::delete('/clients/{client}', [ClientController::class, 'destroy'])->name('clients.destroy'); // deleting client.

    // Project Page:
    Route::get('projects', [ProjectController::class, 'index'])->name('projects.index'); // index page for Projects.
    Route::get('projects/create', [ProjectController::class, 'create'])->name('projects.create'); // Page in creating new projects.
    Route::post('projects/store', [ProjectController::class, 'store'])->name('projects.store'); // Store new Project.
    Route::get('projects/{project}/edit', [ProjectController::class, 'edit'])->name('projects.edit'); // Editing certain project.
    Route::put('projects/{project}/update', [ProjectController::class, 'update'])->name('projects.update'); // Updating certain project.
    Route::delete('projects/{project}', [ProjectController::class, 'destroy'])->name('projects.destroy'); // deleting project.

    // Task Page:
    Route::get('tasks', [TaskController::class, 'index'])->name('tasks.index'); // index page for Tasks.
    Route::get('tasks/create', [TaskController::class, 'create'])->name('tasks.create'); // Page in creating new task.
    Route::post('tasks/store', [TaskController::class, 'store'])->name('tasks.store'); // Store new Task.
    Route::get('tasks/{task}/edit', [TaskController::class, 'edit'])->name('tasks.edit'); // Editing certain task.
    Route::put('tasks/{task}/update', [TaskController::class, 'update'])->name('tasks.update'); // Updating certain task.
    Route::delete('tasks/{task}', [TaskController::class, 'destroy'])->name('tasks.destroy'); // deleting task.

    // Leads Page:
    Route::get('leads', [LeadController::class, 'index'])->name('leads.index'); // index page for Leads.
    Route::get('leads/create', [LeadController::class, 'create'])->name('leads.create'); // Page in creating new leads.

    // Activity Logs Page:
    Route::get('activity-logs', [ActivityLogController::class, 'index'])->name('activity-logs.index'); // index page for Activity Logs.

    // Notifications:
    Route::get('notifications', [NotificationController::class, 'index'])->name('notifications.index');
    Route::get('notifications/unread', [NotificationController::class, 'unread'])->name('notifications.unread');
    Route::patch('notifications/{notification}/read', [NotificationController::class, 'markAsRead'])->name('notifications.markAsRead');
    Route::patch('notifications/mark-all-read', [NotificationController::class, 'markAllAsRead'])->name('notifications.markAllAsRead');
    
    // Test routes for notification system (can be removed in production)
    Route::get('test-notifications', function () {
        $user = \Illuminate\Support\Facades\Auth::user();
        
        \App\Services\NotificationService::create(
            $user,
            'Test Notification',
            'This is a test notification to verify the dynamic notification system is working!',
            \App\Enums\NotificationType::INFO,
            ['test' => true, 'timestamp' => now()->toISOString()]
        );
        
        return redirect()->route('dashboard')->with('success', 'Test notification created!');
    })->name('test.notifications');
    
    // Test welcome notification route
    Route::get('test-welcome', function () {
        $user = \Illuminate\Support\Facades\Auth::user();
        
        // Send welcome notification
        \App\Services\NotificationService::userWelcome($user);
        
        return redirect()->route('dashboard')->with('success', 'Welcome notification sent!');
    })->name('test.welcome');
    
    // Reset first login for testing
    Route::get('reset-first-login', function () {
        $user = \Illuminate\Support\Facades\Auth::user();
        $user->update([
            'first_login_at' => null,
            'last_login_at' => null,
        ]);
        
        return redirect()->route('dashboard')->with('success', 'First login reset! Next page load will trigger first login welcome.');
    })->name('reset.first.login');
});

require __DIR__.'/settings.php';
require __DIR__.'/auth.php';
